button {
  &:focus,
  &:visited {
    outline: none;
  }
}

.button {
  .transition;
  .radius();

  display: flex;
  align-items: center;
  justify-content: center;
  height: @item-generic-size;
  padding: 0 16px;
  font-size: @font-size4;
  line-height: normal;
  color: var(--color-button-label);
  letter-spacing: 0;
  background-color: var(--color-button-primary);

  &:disabled {
    opacity: 0.5;
  }

  i {
    margin-right: 8px;
  }
}

.button--primary {
  background-color: var(--color-button-primary);

  &:hover,
  &:focus {
    background-color: var(--color-button-primary-hover);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-primary);
  }
}

.button--secondary {
  background-color: var(--color-button-secondary);

  &:hover,
  &:focus {
    background-color: var(--color-button-secondary-hover);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-secondary);
  }
}

.button--tertiary {
  background-color: var(--color-button-tertiary);

  &:hover,
  &:focus {
    background-color: var(--color-button-tertiary-hover);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-tertiary);
  }
}

.button--action,
.button--accent {
  color: var(--color-button-label);
  background-color: var(--color-button-accent);

  &:hover,
  &:focus {
    background-color: var(--color-button-accent-hover);
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-accent);
  }
}

.button--border {
  color: var(--colorbutton-secondary);
  background-color: transparent;
  border: 1px solid var(--color-button-secondary);

  &:hover,
  &:focus,
  &.active {
    color: var(--color-button-label);
    background-color: var(--color-button-secondary);
  }
}

.button--alert {
  color: var(--color-button-label);
  background-color: var(--color-button-alert);

  &:hover,
  &:focus,
  &.active {
    color: var(--color-button-label);
    background-color: var(--color-button-alert-hover);
  }
}

.button--disabled {
  cursor: default;
  background-color: @grey;

  &:hover,
  &:focus {
    cursor: default;
    background-color: @grey;
  }
}

// live中の赤ボタン
.button--live {
  background-color: var(--color-red);

  &:focus,
  &:hover {
    background-color: var(--color-red-hover);
  }

  &:disabled,
  &:disabled:hover {
    opacity: @opacity-disabled;
  }
}

.button--trans {
  color: var(--color-text-light);
  background: transparent;

  i {
    color: @text-primary;
    .transition();
  }

  &:hover,
  &:focus {
    color: @white;
    background: transparent;

    i {
      color: @navy;
    }
  }
}

.button--semi-opac {
  i {
    margin: 0 0 0 8px;
  }
}

.button--100 {
  width: 100%;
}

.icon-btn {
  .icon-hover();

  margin-left: 16px;
  font-size: @font-size4;
  cursor: pointer;
}

.icon-btn--sm {
  font-size: @font-size3;
}

.icon-btn--lg {
  font-size: @font-size6;
}

.back-arrow {
  margin-right: 20px;
  font-size: 16px;
  .transition;
}

.back-arrow--light {
  color: @text-primary;

  &:hover {
    color: @white;
  }
}

.button-container {
  display: flex;
  align-content: center;
  justify-content: center;
}

.square-button {
  .radius();
  .transition();

  display: flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  font-size: 16px;
  color: @white;
}

.square-button--skip,
.button--skip {
  color: var(--color-text);
  text-decoration: underline;
  background: transparent;
  border: none;

  &:hover {
    text-decoration: none;
    background: transparent;
  }

  &:focus {
    background: transparent;
  }
}

.button--round {
  // twitchalerts.cssを打ち消し
  font-weight: normal !important;
  border-radius: 9999px !important;
}

.button--go-live,
.button--start-program {
  color: var(--color-button-label);
  background-color: var(--color-button-secondary);
  border-radius: 20px;

  &:hover,
  &:focus {
    background-color: var(--color-button-secondary-hover);
    border-radius: 20px;
  }

  &:disabled,
  &:disabled:hover {
    background-color: var(--color-button-secondary);
  }
}

.button--soft-warning {
  color: var(--color-button-label);
  background: var(--color-red);

  &:focus,
  &:hover {
    background: var(--color-red-hover);
  }

  &:disabled {
    opacity: @opacity-disabled;
  }
}

.button--default {
  color: @white !important;
  background: rgba(255, 255, 255, 10%) !important;
  border-color: transparent !important;

  &:hover {
    background: rgba(255, 255, 255, 20%) !important;
  }

  &:disabled {
    &:hover {
      background: rgba(255, 255, 255, 10%) !important;
    }
  }
}

.button--create-program {
  font-size: 14px;
  background-color: @text-secondary;

  &:hover {
    background-color: @text-tertiary;
  }

  &:disabled {
    &:hover {
      background-color: @text-secondary;
    }
  }
}

.button-nicolive--action {
  color: @white;
  background-color: @text-secondary;

  &:hover {
    background-color: @text-tertiary;
  }

  &:disabled {
    &:hover {
      background-color: @text-secondary;
    }
  }
}

.button-nicolive--default {
  color: @white;
  background-color: @grey;
}

.button--circle {
  display: flex;
  align-items: center;
  justify-content: center;
  width: @item-generic-size;
  height: @item-generic-size;
  cursor: pointer;
  border-radius: 50%;
  .transition;

  i {
    font-size: @font-size5;
    color: var(--color-button-label);
  }

  &.active {
    background-color: var(--color-button-active);

    i {
      color: var(--color-bg-secondary);
    }
  }
}

.button--text {
  font-size: @font-size4;
  font-weight: @font-weight-normal;
  color: var(--color-button-primary);

  &:hover {
    color: var(--color-button-active);
  }
}

.button--tab {
  position: relative;
  padding: 8px;
  font-size: @font-size4;
  color: var(--color-text);
  text-align: center;

  &:hover {
    color: var(--color-text-light);
  }

  &::after {
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 2px;
    content: '';
    background-color: transparent;
  }

  &.active {
    color: var(--color-text-light);

    &::after {
      background-color: var(--color-text-light);
    }
  }
}

// デザインシステム適用版

//　button
.basic-button {
  &[data-size='sm'] {
    --font-size: var(--font-size-xs);
    --height: var(--button-height-sm);
    --padding: var(--button-padding-sm);
  }

  &[data-size='md'] {
    --font-size: var(--font-size-sm);
    --height: var(--button-height-md);
    --padding: var(--button-padding-md);
  }

  &[data-size='lg'] {
    --font-size: var(--font-size-lg);
    --height: var(--button-height-lg);
    --padding: var(--button-padding-lg);
  }

  &[data-radius='sm'] {
    --radius: var(--radius-sm);
  }

  &[data-radius='lg'] {
    --radius: var(--radius-lg);
  }

  &[data-color='primary'] {
    --color-base: var(--color-button-primary);
  }

  &[data-color='secondary'] {
    --color-base: var(--color-object-emphasis-high);
  }

  &[data-variant='filled'] {
    --color-text: var(--white);
    --color-border: transparent;
    --color-bg: var(--color-base);
    --color-bg-hover: color-mix(in srgb, var(--color-base) 80%, transparent);
  }

  &[data-variant='light'] {
    --color-text: var(--color-base);
    --color-border: transparent;
    --color-bg: color-mix(in srgb, var(--color-base) 16%, transparent);
    --color-bg-hover: color-mix(in srgb, var(--color-object-emphasis-high) 20%, transparent);
  }

  &[data-variant='sabtle'] {
    --color-text: var(--color-base);
    --color-border: transparent;
    --color-bg: transparent;
    --color-bg-hover: color-mix(in srgb, var(--color-base) 20%, transparent);
  }

  &[data-variant='outline'] {
    --color-text: var(--color-base);
    --color-border: var(--color-base);
    --color-bg: transparent;
    --color-bg-hover: color-mix(in srgb, var(--color-base) 5%, transparent);
  }

  height: var(--height);
  padding-inline: var(--padding);
  font-size: var(--font-size);
  color: var(--color-text);
  background-color: var(--color-bg);
  border: 1px solid var(--color-border);
  border-radius: var(--radius);

  .transition;

  &:disabled {
    opacity: var(--opacity-disabled);
  }

  &:not(:disabled):hover {
    background-color: var(--color-bg-hover);
  }
}

// action-icon用
.action-icon {
  &[data-size='sm'] {
    --size: var(--action-icon-size-sm);
  }

  &[data-size='md'] {
    --size: var(--action-icon-size-md);
  }

  &[data-size='lg'] {
    --size: var(--action-icon-size-lg);
  }

  &[data-radius='sm'] {
    --radius: var(--radius-sm);
  }

  &[data-radius='lg'] {
    --radius: var(--radius-lg);
  }

  &[data-color='secondary'] {
    --color-base: var(--color-object-emphasis-medium);
    --color-base-active: var(--color-object-accent-primary);
  }

  &[data-variant='filled'] {
    --color-text: var(--color-object-emphasis-high);
    --color-text-active: var(--color-object-emphasis-inverse);
    --color-bg: var(--color-base);
    --color-bg-hover: color-mix(in srgb, var(--color-base) 80%, transparent);
    --color-bg-active: var(--color-base-active);
    --color-border: transparent;
    --color-border-active: transparent;
  }

  &[data-variant='light'] {
    --color-text: var(--color-object-emphasis-high);
    --color-text-active: var(--color-base-active);
    --color-bg: color-mix(in srgb, var(--color-base) 16%, transparent);
    --color-bg-hover: color-mix(in srgb, var(--color-base) 20%, transparent);
    --color-bg-active: color-mix(in srgb, var(--color-base-active) 20%, transparent);
    --color-border: transparent;
    --color-border-active: transparent;
  }

  &[data-variant='sabtle'] {
    --color-text: var(--color-object-emphasis-high);
    --color-text-active: var(--color-base-active);
    --color-bg: transparent;
    --color-bg-hover: color-mix(in srgb, var(--color-base) 20%, transparent);
    --color-bg-active: color-mix(in srgb, var(--color-base-active) 20%, transparent);
    --color-border: transparent;
    --color-border-active: transparent;
  }

  &[data-variant='outline'] {
    --color-text: var(--color-object-emphasis-high);
    --color-text-active: var(--color-base-active);
    --color-bg: transparent;
    --color-bg-hover: color-mix(in srgb, var(--color-text) 5%, transparent);
    --color-bg-active: color-mix(in srgb, var(--color-base-active) 20%, transparent);
    --color-border: var(--color-base);
    --color-border-active: var(--color-base-active);
  }

  width: var(--size);
  height: var(--size);
  color: var(--color-text);
  background-color: var(--color-bg);
  border: 1px solid var(--color-border);
  border-radius: var(--radius);

  .transition;

  &:disabled {
    opacity: var(--opacity-disabled);
  }

  &:not(:disabled):hover {
    background-color: var(--color-bg-hover);
  }
}
